(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,n)=>{const a=n(475),r=n(27),{AxisScrollStrategies:s,AxisTickStrategies:o,lightningChart:i,LegendBoxBuilders:l,Themes:d}=a,{createProgressiveTraceGenerator:c}=r,m=i().Dashboard({numberOfRows:1,numberOfColumns:2}),u=m.createChartXY({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:1}).setTitle("ChartXY"),g=new Date;g.setHours(0),g.setMinutes(0),g.setSeconds(0);const h=g.getTime();u.getDefaultAxisX().setTickStrategy(o.Time,(e=>e.setTimeOrigin(1e3*(60*(60*g.getHours()+g.getMinutes())+g.getSeconds())))).setScrollStrategy(s.progressive).setInterval({start:-1e4,end:0,stopAxisAfter:!1}).setAnimationScroll(!1);const S=u.addLineSeries({dataPattern:{pattern:"ProgressiveX"},automaticColorIndex:3}).setDataCleaning({minDataPointCount:1}).setName("Moving average"),x=u.addLineSeries({dataPattern:{pattern:"ProgressiveX"},automaticColorIndex:0}).setDataCleaning({minDataPointCount:1}).setName("Value"),C=(u.addLegendBox(l.HorizontalLegendBox).add(u),m.createDataGrid({columnIndex:1,rowIndex:0,columnSpan:1,rowSpan:1}).setTitle("DataGrid").setColumnWidth(0,{min:140}).setColumnWidth(1,{min:140}).setColumnWidth(2,{min:140})),p=[["Time","Value","Moving Average"]],T=[];c().setNumberOfPoints(1e4).generate().setStreamBatchSize(1).setStreamInterval(20).toStream().forEach((e=>{const t={x:Date.now()-h,y:e.y};T.push(t.y),T.length>50&&T.shift();const n=T.reduce(((e,t)=>e+t),0)/T.length;x.add(t),S.add({x:t.x,y:n});const a=new Date(t.x+h);p.splice(1,0,[`${a.toLocaleTimeString("en-US",{hour:"numeric",minute:"numeric",second:"numeric",hour12:!1})}:${v(a)}`,`${t.y.toFixed(2)}`,`${n.toFixed(2)}`]),p.length=Math.min(p.length,25),C.removeCells().setTableContent(p)}));const v=e=>{let t=String(e.getMilliseconds());for(;t.length<3;)t=`0${t}`;return t}}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);