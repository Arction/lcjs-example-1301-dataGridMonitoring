(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,n)=>{const s=n(475),a=n(27),o=new Array(20).fill(0).map(((e,t)=>({title:`Ch ${t+1}`}))),{lightningChart:r,AutoCursorModes:i,emptyLine:l,AxisTickStrategies:c,AxisScrollStrategies:h,synchronizeAxisIntervals:g,UIOrigins:d,UIDraggingModes:m,Themes:u}=s,{createProgressiveFunctionGenerator:M}=a,f=document.getElementById("chart")||document.body,p=document.createElement("div");f.append(p),p.style.width="100%",p.style.height="1400px";const S=r().Dashboard({container:p,numberOfColumns:1,numberOfRows:o.length}).setSplitterStyle(l),y=1330/o.length;o.forEach(((e,t)=>{const n=y+(0===t?40:0)+(t===o.length-1?30:0);S.setRowHeight(t,n)}));const x=o.map(((e,t)=>{const n=S.createChartXY({columnIndex:0,rowIndex:t}).setTitle("").setPadding({top:0,bottom:0,left:0}).setAutoCursorMode(i.disabled).setBackgroundStrokeStyle(l).setMouseInteractions(!1),s=n.getDefaultAxisX().setTickStrategy(c.Empty).setStrokeStyle(l).setScrollStrategy(h.progressive).setInterval({start:-1e4,end:0,stopAxisAfter:!1}),a=n.getDefaultAxisY().setTickStrategy(c.Empty).setStrokeStyle(l).setTitle(e.title).setTitleRotation(0).setThickness(60),o=n.addLineSeries({dataPattern:{pattern:"ProgressiveX",regularProgressiveStep:!0},automaticColorIndex:t}).setName(`Channel ${t+1}`).setDataCleaning({minDataPointCount:1e4}).setStrokeStyle((e=>e.setThickness(-1)));return{chart:n,series:o,axisX:s,axisY:a}})),I=x[0],w=x[x.length-1];I.chart.setTitle(`Multi-channel real-time monitoring (${o.length} chs, 1000 Hz)`);const k=w.axisX.setThickness(30).setTickStrategy(c.Time,(e=>e.setMajorTickStyle((e=>e.setGridStrokeStyle(l))).setMinorTickStyle((e=>e.setGridStrokeStyle(l)))));g(...x.map((e=>e.axisX))),S.addLegendBox().add(S).setOrigin(d.RightCenter).setPosition({x:100,y:50}).setMargin({right:30}),k.setNibInteractionScaleByDragging(!1).setNibInteractionScaleByWheeling(!1).setAxisInteractionZoomByWheeling(!1);const A=(e,t)=>{const n=k.getInterval(),s=n.end-n.start,a=s+.1*Math.sign(t.deltaY)*Math.abs(s);k.setIntervall({start:n.end-a,end:n.end,stopAxisAfter:!1}),t.preventDefault(),t.stopPropagation()};k.onAxisInteractionAreaMouseWheel(A),x.forEach((e=>{e.chart.onSeriesBackgroundMouseWheel(A),e.series.onMouseWheel(A)})),S.addUIElement().setText("Reset").setPosition({x:0,y:0}).setOrigin(d.LeftBottom).setMargin({left:4,bottom:4}).setDraggingMode(m.notDraggable).onMouseClick((e=>{const t=x[0].series.getXMax();k.setInterval({start:t-1e4,end:t,stopAxisAfter:!1}),x.forEach((e=>e.axisY.fit()))}));const P=[{length:400*Math.PI,func:e=>Math.sin(e/200)},{length:400*Math.PI,func:e=>Math.cos(e/200)},{length:800*Math.PI,func:e=>Math.cos(e/400)+Math.sin(e/200)},{length:800*Math.PI,func:e=>Math.sin(e/100)+Math.cos(e/400)},{length:800*Math.PI,func:e=>Math.sin(e/200)*Math.cos(e/400)},{length:1800*Math.PI,func:e=>Math.cos(e/900)},{length:3200*Math.PI,func:e=>Math.sin(e/1600)},{length:2600*Math.PI,func:e=>Math.sin(e/400)*Math.cos(e/1300)}];new Array(83424).fill(0).map((e=>.04*Math.random())),Promise.all(P.map((e=>M().setStart(0).setEnd(e.length).setStep(1).setSamplingFunction(e.func).generate().toPromise().then((e=>e.map((e=>e.y))))))).then((e=>{let t=window.performance.now(),n=0;const s=()=>{const a=window.performance.now(),o=Math.floor(1e3*(a-t)/1e3),r=Math.min(o-n,1e3),i=[];for(let t=0;t<x.length;t++){const s=e[t%e.length],a=[];for(let e=0;e<r;e++){const t={x:1*(n+e),y:s[(n+e)%s.length]};a.push(t)}i[t]=a}x.forEach(((e,t)=>e.series.add(i[t]))),n+=r,requestAnimationFrame(s)};s()}));let T=window.performance.now(),C=0,b=0;const v=I.chart.getTitle(),D=()=>{C++;const e=window.performance.now();b=1e3/((e-T)/C),requestAnimationFrame(D),I.chart.setTitle(`${v} (FPS: ${b.toFixed(1)})`)};requestAnimationFrame(D),setInterval((()=>{T=window.performance.now(),C=0}),5e3)}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);